<?php
/*
	+-----------------------------------------------------------------------------+
	| ILIAS open source                                                           |
	+-----------------------------------------------------------------------------+
	| Copyright (c) 1998-2001 ILIAS open source, University of Cologne            |
	|                                                                             |
	| This program is free software; you can redistribute it and/or               |
	| modify it under the terms of the GNU General Public License                 |
	| as published by the Free Software Foundation; either version 2              |
	| of the License, or (at your option) any later version.                      |
	|                                                                             |
	| This program is distributed in the hope that it will be useful,             |
	| but WITHOUT ANY WARRANTY; without even the implied warranty of              |
	| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               |
	| GNU General Public License for more details.                                |
	|                                                                             |
	| You should have received a copy of the GNU General Public License           |
	| along with this program; if not, write to the Free Software                 |
	| Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. |
	+-----------------------------------------------------------------------------+
*/

include_once("./Services/Repository/classes/class.ilObjectPluginAccess.php");

/**
* Access/Condition checking for Review object
*
* @author 		Richard MÃ¶rbitz <Richard.Moerbitz@mailbox.tu-dresden.de>
* @version $Id$
*/
class ilObjReviewAccess extends ilObjectPluginAccess {

	/**
	* Checks wether a user may invoke a command or not
	* (this method is called by ilAccessHandler::checkAccess)
	*
	* @param	string		$a_cmd			command (not permission!)
 	* @param	string		$a_permission	permission
	* @param	int			$a_ref_id		reference id
	* @param	int			$a_obj_id		object id
	* @param	int			$a_user_id		user id (if not provided, current user is taken)
	*
	* @return	boolean		true, if everything is ok
	*/
	function _checkAccess($a_cmd, $a_permission, $a_ref_id, $a_obj_id, $a_user_id = "") {
		global $ilUser, $ilAccess;

		if ($a_user_id == "") {
			$a_user_id = $ilUser->getId();
		}

		switch ($a_permission) {
			case "read":
				if (!ilObjReviewAccess::checkOnline($a_obj_id) &&
					!$ilAccess->checkAccessOfUser($a_user_id, "write", "", $a_ref_id))
					return false;
				break;
		}

		return true;
	}
	
	/**
	* Check, if user is allowed to edit a certain review or to view certain reviews
	*
	* @return	boolean 		true, if user gets access
	*
	* @param	int			$a_obj_id		object id
	* @param	int			$a_user_id		user id
	* @param	string		$a_cmd			command
	* @param string		$a_obj_type		type of requested object (review or question)
	*/
	static function checkAccessToObject($a_obj_id, $a_user_id, $a_cmd, $a_obj_type) {	
		global $ilDB, $ilUser;
		
		if ($a_user_id == "") {
			$a_user_id = $ilUser->getId();
		}
		
		switch ($a_cmd) {
			case "inputReview":
			case "saveReview":
				$res = $ilDB->queryF("SELECT COUNT(id) FROM rep_robj_xrev_revi WHERE id=%s AND reviewer=%s",
										   array("integer", "integer"),
										   array($a_obj_id, $a_user_id)
						 );
				if ($ilDB->fetchAssoc($res)["count(id)"] == 1)
					return true;
				break;
			case "showReviews":
				if ($a_obj_type == "review") {
					$res = $ilDB->queryF("SELECT COUNT(id) FROM rep_robj_xrev_revi WHERE id=%s AND reviewer=%s",
										   array("integer", "integer"),
										   array($a_obj_id, $a_user_id)
						 );
					if ($ilDB->fetchAssoc($res)["count(id)"] == 1)
						return true;
				}
				if ($a_obj_type == "question") {
					$res = $ilDB->queryF("SELECT COUNT(question_id) FROM qpl_questions WHERE question_id=%s AND owner=%s",
										   array("integer", "integer"),
										   array($a_obj_id, $a_user_id)
						 );
					if ($ilDB->fetchAssoc($res)["count(question_id)"] == 1)
						return true;
				}
				break;
		}
		return false;
	}
	/**
	* Is called by ILIAS and needs to return true for the plugin to work
	*
	* @param		integer		$a_id			id
	*/
	public static function checkOnline($a_id) {
		return true;
	}
}
?>
